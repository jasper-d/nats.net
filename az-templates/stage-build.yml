stages:
- stage: Build
  jobs:
  - job: BuildBinaries
    displayName: Builds binaries
    timeoutInMinutes: 10
    strategy:
      matrix:
        linux:
          imageName: ubuntu-18.04
        mac:
          imageName: macos-10.15
        windows:
          imageName: windows-2019

    pool:
      vmImage: $(imageName)

    steps:
    - task: DotNetCoreCLI@2
      displayName: Build solution
      inputs:
        command: build
        projects: src/*.sln
        arguments: '-c $(BuildConfiguration) --no-incremental --nologo -p:TreatWarningsAsErrors=true -p:Version=$(SemVer) -p:InformationalVersion=$(InfoVer)'

    - task: PublishPipelineArtifact@1
      displayName: Publish binaries for use in following jobs
      condition: eq(variables['Agent.OS'], 'Windows_NT')
      inputs:
        targetpath: ./
        artifactname: binaries

  - job: TestBinaries
    dependsOn: BuildBinaries
    displayName: Test binaries
    timeoutInMinutes: 10
    strategy:
      matrix:
        linux-netcore:
          imageName: ubuntu-18.04
          targetFrameworkMoniker: netcoreapp3.1
        mac-netcore:
          imageName: macos-10.15
          targetFrameworkMoniker: netcoreapp3.1
        windows-netcore:
          imageName: windows-2019
          targetFrameworkMoniker: netcoreapp3.1
        windows-nextfx:
          imageName: windows-2019
          targetFrameworkMoniker: net452
    pool:
      vmImage: $(imageName)

    steps:
      - checkout: none

      - task: DownloadPipelineArtifact@2
        inputs:
          targetpath: ./
          artifactname: binaries

      - task: DotNetCoreCLI@2
        displayName: Run unit tests
        inputs:
          command: test
          projects: src/Tests/UnitTests/bin/$(BuildConfiguration)/$(targetFrameworkMoniker)/UnitTests.dll
          arguments: --framework $(targetFrameworkMoniker) --nologo
          testRunTitle: 'UnitTests $(imageName) $(targetFrameworkMoniker)'
